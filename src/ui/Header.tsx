function House() {
  return (
    <svg
      width="100%"
      height="100%"
      viewBox="0 0 200 200"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M13.8237 76.8204C12.6217 79.4318 11.9993 82.2761 12 85.1548V174.21C12 179.459 14.0683 184.492 17.75 188.204C21.4316 191.915 26.425 194 31.6317 194H169.054C174.26 194 179.254 191.915 182.935 188.204C186.617 184.492 188.685 179.459 188.685 174.21V85.1548C188.686 82.2761 188.063 79.4318 186.862 76.8204C185.659 74.2091 183.907 71.8936 181.725 70.0353L113.014 10.6752C109.471 7.65631 104.982 6 100.343 6C95.7032 6 91.2137 7.65631 87.6703 10.6752L18.9594 70.0353C16.7783 71.8936 15.0257 74.2091 13.8237 76.8204ZM140.272 116.958C140.272 139.206 122.206 157.242 99.9186 157.242C78.7741 157.242 61.4277 141.008 59.705 120.344H113.044V113.572H59.705C61.4277 92.9081 78.7741 76.674 99.9186 76.674C122.206 76.674 140.272 94.71 140.272 116.958Z"
        fill="white"
      />
      <mask
        id="mask0_9_2"
        style="mask-type:luminance"
        maskUnits="userSpaceOnUse"
        x="12"
        y="6"
        width="177"
        height="188"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M13.8237 76.8204C12.6217 79.4318 11.9993 82.2761 12 85.1548V174.21C12 179.459 14.0683 184.492 17.75 188.204C21.4316 191.915 26.425 194 31.6317 194H169.054C174.26 194 179.254 191.915 182.935 188.204C186.617 184.492 188.685 179.459 188.685 174.21V85.1548C188.686 82.2761 188.063 79.4318 186.862 76.8204C185.659 74.2091 183.907 71.8936 181.725 70.0353L113.014 10.6752C109.471 7.65631 104.982 6 100.343 6C95.7032 6 91.2137 7.65631 87.6703 10.6752L18.9594 70.0353C16.7783 71.8936 15.0257 74.2091 13.8237 76.8204ZM140.272 116.958C140.272 139.206 122.206 157.242 99.9186 157.242C78.7741 157.242 61.4277 141.008 59.705 120.344H113.044V113.572H59.705C61.4277 92.9081 78.7741 76.674 99.9186 76.674C122.206 76.674 140.272 94.71 140.272 116.958Z"
          fill="white"
        />
      </mask>
      <g mask="url(#mask0_9_2)">
        <path
          d="M12 85.1544H20.1275V85.1525L12 85.1544ZM188.685 85.1544L180.558 85.1525V85.1544H188.685ZM181.725 70.0348L176.413 76.1851C176.427 76.1973 176.441 76.2094 176.455 76.2215L181.725 70.0348ZM113.014 10.6748L118.328 4.52452C118.314 4.51234 118.3 4.50022 118.286 4.48813L113.014 10.6748ZM87.6702 10.6748L82.3995 4.48813C82.3852 4.50022 82.3711 4.51234 82.357 4.52452L87.6702 10.6748ZM18.9594 70.0348L24.2303 76.2215C24.2445 76.2094 24.2586 76.1973 24.2727 76.1851L18.9594 70.0348ZM59.705 120.344V112.216C57.432 112.216 55.2629 113.168 53.724 114.84C52.185 116.513 51.4167 118.754 51.6056 121.019L59.705 120.344ZM113.044 120.344V128.471C117.532 128.471 121.171 124.833 121.171 120.344H113.044ZM113.044 113.572H121.171C121.171 109.083 117.532 105.444 113.044 105.444V113.572ZM59.705 113.572L51.6056 112.896C51.4167 115.161 52.185 117.402 53.724 119.075C55.2629 120.747 57.432 121.699 59.705 121.699V113.572ZM20.1275 85.1525C20.1271 83.4459 20.4962 81.7618 21.2066 80.2184L6.44072 73.4217C4.74718 77.1009 3.87152 81.1054 3.87249 85.1564L20.1275 85.1525ZM20.1275 174.209V85.1544H3.87249V174.209H20.1275ZM23.52 182.479C21.3553 180.297 20.1275 177.323 20.1275 174.209H3.87249C3.87249 181.593 6.78138 188.687 11.9799 193.927L23.52 182.479ZM31.6317 185.872C28.6018 185.872 25.6826 184.659 23.52 182.479L11.9799 193.927C17.1807 199.169 24.2483 202.127 31.6317 202.127V185.872ZM169.054 185.872H31.6317V202.127H169.054V185.872ZM177.165 182.479C175.003 184.659 172.084 185.872 169.054 185.872V202.127C176.436 202.127 183.505 199.169 188.705 193.927L177.165 182.479ZM180.558 174.209C180.558 177.323 179.33 180.297 177.165 182.479L188.705 193.927C193.903 188.687 196.813 181.593 196.813 174.209H180.558ZM180.558 85.1544V174.209H196.813V85.1544H180.558ZM179.478 80.2184C180.189 81.7618 180.558 83.4459 180.558 85.1525L196.813 85.1564C196.813 81.1054 195.938 77.1009 194.244 73.4217L179.478 80.2184ZM176.455 76.2215C177.735 77.3121 178.768 78.6751 179.478 80.2184L194.244 73.4217C192.551 69.7423 190.079 66.4742 186.997 63.8482L176.455 76.2215ZM107.701 16.825L176.413 76.1851L187.039 63.8846L118.328 4.52452L107.701 16.825ZM100.343 14.1271C103.043 14.1271 105.665 15.0907 107.744 16.8614L118.286 4.48813C113.278 0.221098 106.921 -2.12793 100.343 -2.12793V14.1271ZM92.9411 16.8614C95.0195 15.0907 97.6421 14.1271 100.343 14.1271V-2.12793C93.7642 -2.12793 87.4078 0.221098 82.3995 4.48813L92.9411 16.8614ZM24.2727 76.1851L92.9835 16.825L82.357 4.52452L13.6462 63.8846L24.2727 76.1851ZM21.2066 80.2184C21.917 78.6751 22.9503 77.3121 24.2303 76.2215L13.6886 63.8482C10.6064 66.4742 8.13434 69.7423 6.44072 73.4217L21.2066 80.2184ZM99.9186 165.369C126.681 165.369 148.4 143.708 148.4 116.958H132.145C132.145 134.703 117.73 149.114 99.9186 149.114V165.369ZM51.6056 121.019C53.6775 145.871 74.5235 165.369 99.9186 165.369V149.114C83.0246 149.114 69.1779 136.143 67.8044 119.668L51.6056 121.019ZM113.044 112.216H59.705V128.471H113.044V112.216ZM104.916 113.572V120.344H121.171V113.572H104.916ZM59.705 121.699H113.044V105.444H59.705V121.699ZM99.9186 68.5461C74.5235 68.5461 53.6775 88.0437 51.6056 112.896L67.8044 114.247C69.1779 97.7716 83.0246 84.8011 99.9186 84.8011V68.5461ZM148.4 116.958C148.4 90.2073 126.681 68.5461 99.9186 68.5461V84.8011C117.73 84.8011 132.145 99.2116 132.145 116.958H148.4Z"
          fill="white"
        />
      </g>
    </svg>
  );
}

export function Header() {
  return (
    <div
      style="
        background: #1761ff;
        margin-top: -80px;
        transform: translateY(80px);
      "
    >
      <div class="relative overflow-hidden">
        <div class="w-full max-w-[960px] mx-auto text-center flex flex-col items-center">
          <div class="mt-8 w-24">
            <House />
          </div>

          <div class="w-[50%] max-sm:w-[90%]">
            <HeaderLogo />
          </div>

          <div class="flex flex-col items-center text-white/80 -mt-3 mb-5">
            Where based builders and creators come to grow.
          </div>
        </div>

        <div style="height: 100px">
          <div
            style="
            z-index: -1;
            position: absolute;
            left: 50%;
            bottom: 0;
            transform: translate(-50%, 50%);
            background: #fff;
            clip-path: ellipse(max(40%, 700px) 50% at 50% 50%);
            width: 140%;
            height: 200px;
          "
          ></div>
        </div>
      </div>
    </div>
  );
}

export function HeaderLogo() {
  const width = 425,
    height = 80,
    startY = 60,
    controlY = 40;
  const curve = {
    start: { x: 6, y: startY },
    control: { x: width / 2, y: controlY },
    end: { x: width - 6, y: startY },
  };
  const path = `M${curve.start.x},${curve.start.y} Q${curve.control.x},${curve.control.y} ${curve.end.x},${curve.end.y}`;
  const text = "HOMEBASE";
  const totalChars = text.length;
  const spacing = 100 / totalChars; // Distribute evenly across 100% of the path
  const letters = text.split("").map((char, i) => ({
    i,
    char,
    offset: `${(i + 0.5) * spacing}%`,
    textAnchor: "middle" as const,
  }));

  return (
    <svg
      width="100%"
      viewBox={`0 0 ${width} ${height}`}
      font-size="40px"
      font-weight="900"
    >
      <path id="curve" d={path} style="visibility: hidden" />

      <g fill="white">
        {letters.map((letter) => (
          <text
            text-anchor={letter.textAnchor}
            fill="white"
            style={`
              user-select: none;
              --hf: ${letter.i};
              --nounder-float-y: 1%;
              animation: nounder-float ease-in-out infinite;
              animation-duration: calc(1s * 2 * var(--hf, 1));
              animation-delay: calc(0.1 - var(--hf, 1) * 2);
              pointer-events: none;
            `}
          >
            <textPath href="#curve" startOffset={letter.offset}>
              {letter.char}
            </textPath>
          </text>
        ))}
      </g>
    </svg>
  );
}
